"use strict";(self.webpackChunkTHM_Notes=self.webpackChunkTHM_Notes||[]).push([[247],{4438:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=n(4848),i=n(8453);const r={},a="Decoder",o={id:"Jr Penetration Tester/Burp Suite/Other Modules",title:"Other Modules",description:"Burp_Suite #tools",source:"@site/docs/Jr Penetration Tester/Burp Suite/Other Modules.md",sourceDirName:"Jr Penetration Tester/Burp Suite",slug:"/Jr Penetration Tester/Burp Suite/Other Modules",permalink:"/docs/Jr Penetration Tester/Burp Suite/Other Modules",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"THMSidebar",previous:{title:"Intruder",permalink:"/docs/Jr Penetration Tester/Burp Suite/Intruder"},next:{title:"Repeater",permalink:"/docs/Jr Penetration Tester/Burp Suite/Repeater"}},c={},l=[{value:"Encoding/ Decoding",id:"encoding-decoding",level:2},{value:"Hashing",id:"hashing",level:2},{value:"Live Capture",id:"live-capture",level:2},{value:"Analysis",id:"analysis",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"#Web #Burp_Suite #tools"}),"\n",(0,s.jsx)(t.h1,{id:"decoder",children:"Decoder"}),"\n",(0,s.jsxs)(t.p,{children:["The same function as ",(0,s.jsx)(t.a,{href:"https://gchq.github.io/CyberChef/",children:"Cyberchef"})]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Decoder",src:n(1849).A+"",width:"1260",height:"318"})}),"\n",(0,s.jsx)(t.h2,{id:"encoding-decoding",children:"Encoding/ Decoding"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Plain"}),"\n",(0,s.jsx)(t.li,{children:"URL: It involves substituting characters for their ASCII character code in hexadecimal format, preceded by a percentage symbol (%)."}),"\n",(0,s.jsx)(t.li,{children:"HTML: HTML Entities encoding replaces special characters with an ampersand (&), followed by either a hexadecimal number or a reference to the character being escaped, and ending with a semicolon (;)."}),"\n",(0,s.jsx)(t.li,{children:"Base64"}),"\n",(0,s.jsx)(t.li,{children:"ASCII Hex: This option transitions data between ASCII and hexadecimal representations."}),"\n",(0,s.jsx)(t.li,{children:"Hex, Octal and Binary"}),"\n",(0,s.jsx)(t.li,{children:"Gzip: Gzip compresses data, reducing file and page sizes before browser transmission."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"hashing",children:"Hashing"}),"\n",(0,s.jsx)(t.p,{children:"Hashing is a one-way process that transforms data into a unique signature. For a function to qualify as a hashing algorithm, the output it generates must be irreversible. A proficient hashing algorithm ensures that every data input will generate a completely unique hash. Therefore, hashes are commonly used to verify the integrity of files and documents, as even a tiny alteration to the file significantly changes the hashsum."}),"\n",(0,s.jsx)(t.p,{children:"A hashing algorithm's output does not yield pure ASCII/Unicode text. Hence, it's customary to convert the algorithm's output into a hexadecimal string; this is the \"hash\" form you might be familiar with."}),"\n",(0,s.jsx)(t.h1,{id:"comparer",children:"Comparer"}),"\n",(0,s.jsx)(t.p,{children:"It lets us compare two pieces of data, either by ASCII words or by bytes."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Comparer",src:n(3666).A+"",width:"1100",height:"763"})}),"\n",(0,s.jsx)(t.h1,{id:"sequencer",children:"Sequencer"}),"\n",(0,s.jsxs)(t.p,{children:['Sequencer allows us to evaluate the entropy, or randomness, of "tokens". Tokens are strings used to identify something and should ideally be generated in a cryptographically secure manner. These tokens could be session cookies or ',(0,s.jsx)(t.strong,{children:"C"}),"ross-",(0,s.jsx)(t.strong,{children:"S"}),"ite ",(0,s.jsx)(t.strong,{children:"R"}),"equest ",(0,s.jsx)(t.strong,{children:"F"}),"orgery (CSRF) tokens used to protect form submissions."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Sequencer",src:n(5211).A+"",width:"779",height:"524"})}),"\n",(0,s.jsx)(t.p,{children:"We have two main ways to perform token analysis with Sequencer:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Live Capture"}),": This is the more common method and is the default sub-tab for Sequencer. Live capture lets us pass a request that will generate a token to Sequencer for analysis. For instance, we might want to pass a POST request to a login endpoint to Sequencer, knowing that the server will respond with a cookie. With the request passed in, we can instruct Sequencer to start a live capture. It will then automatically make the same request thousands of times, storing the generated token samples for analysis. After collecting enough samples, we stop the Sequencer and allow it to analyze the captured tokens."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Manual Load"}),": This allows us to load a list of pre-generated token samples directly into Sequencer for analysis. Using Manual Load means we don't need to make thousands of requests to our target, which can be noisy and resource-intensive. However, it does require that we have a large list of pre-generated tokens."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"live-capture",children:"Live Capture"}),"\n",(0,s.jsx)(t.p,{children:"Example:\nWe are using the Sequencer's live capture for entropy analysis on the anti-bruteforce token used in the admin login form."}),"\n",(0,s.jsxs)(t.p,{children:["First, capture a request to ",(0,s.jsx)(t.code,{children:"http://10.10.106.202/admin/login/"})]}),"\n",(0,s.jsxs)(t.p,{children:['In the "Token Location Within Response" section, we can select between ',(0,s.jsx)(t.strong,{children:"Cookie"}),", ",(0,s.jsx)(t.strong,{children:"Form field"}),", and ",(0,s.jsx)(t.strong,{children:"Custom location"}),'. Since we\'re testing the loginToken in this case, select the "Form field" radio button and choose the loginToken']}),"\n",(0,s.jsxs)(t.p,{children:["Click on the ",(0,s.jsx)(t.strong,{children:"Start live capture"})," button. A new window will pop up indicating that a live capture is in progress and displaying the number of tokens captured so far. Wait until a sufficient number of tokens are captured (approximately 10,000 should suffice); the more tokens we have, the more precise our analysis will be."]}),"\n",(0,s.jsxs)(t.p,{children:["Once around 10,000 tokens are captured, click on ",(0,s.jsx)(t.strong,{children:"Pause"})," and then select the ",(0,s.jsx)(t.strong,{children:"Analyze now"})," button"]}),"\n",(0,s.jsx)(t.h2,{id:"analysis",children:"Analysis"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Report",src:n(404).A+"",width:"949",height:"633"})}),"\n",(0,s.jsx)(t.p,{children:"The generated entropy analysis report is split into four primary sections."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Overall result: This gives a broad assessment of the security of the token generation mechanism."}),"\n",(0,s.jsx)(t.li,{children:"Effective entropy: This measures the randomness of the tokens. The effective entropy of 117 bits is relatively high, indicating that the tokens are sufficiently random and, therefore, secure against prediction or brute force attacks."}),"\n",(0,s.jsx)(t.li,{children:"Reliability: The significance level of 1% implies that there is 99% confidence in the accuracy of the results. This level of confidence is quite high, providing assurance in the accuracy of the effective entropy estimation."}),"\n",(0,s.jsx)(t.li,{children:"Sample: This provides details about the token samples analyzed during the entropy testing process, including the number of tokens and their characteristics."}),"\n"]}),"\n",(0,s.jsx)(t.h1,{id:"organizer",children:"Organizer"}),"\n",(0,s.jsx)(t.p,{children:"The Organizer module of Burp Suite is designed to help you store and annotate copies of HTTP requests that you may want to revisit later. This tool can be particularly useful for organizing your penetration testing workflow."}),"\n",(0,s.jsxs)(t.p,{children:["Press ",(0,s.jsx)(t.code,{children:"Ctrl + O"})," to send requests to Organizer."]}),"\n",(0,s.jsx)(t.p,{children:"Requests are stored in a table, which contains columns such as the request index number, the time the request was made, workflow status, Burp tool that the request was sent from, HTTP method, server hostname, URL file path, URL query string, number of parameters in the request, HTTP status code of the response, length of the response in bytes, and any notes that you have made."})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},1849:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/Other_Modules_1-858701764c8d788bac65c7c8afdd76f5.png"},3666:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/Other_Modules_2-11587f054eafa0048c882403f3a7ac94.png"},5211:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/Other_Modules_3-629968268cbad67620a91f6535aab0d9.png"},404:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/Other_Modules_4-28bdd37e318c9db47bb5af69d7a621bb.png"},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var s=n(6540);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);