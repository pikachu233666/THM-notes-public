"use strict";(self.webpackChunkTHM_Notes=self.webpackChunkTHM_Notes||[]).push([[2593],{1230:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>d});var s=n(4848),o=n(8453);const a={},i="Main Components of Metasploit",l={id:"Jr Penetration Tester/Metasploit/Introduction",title:"Introduction",description:"Metasploit",source:"@site/docs/Jr Penetration Tester/Metasploit/Introduction.md",sourceDirName:"Jr Penetration Tester/Metasploit",slug:"/Jr Penetration Tester/Metasploit/Introduction",permalink:"/docs/Jr Penetration Tester/Metasploit/Introduction",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"THMSidebar",previous:{title:"Exploitation",permalink:"/docs/Jr Penetration Tester/Metasploit/Exploitation"},next:{title:"Meterpreter",permalink:"/docs/Jr Penetration Tester/Metasploit/Meterpreter"}},r={},d=[{value:"Anxiliary",id:"anxiliary",level:2},{value:"Encoders",id:"encoders",level:2},{value:"Evasion",id:"evasion",level:2},{value:"Exploits",id:"exploits",level:2},{value:"NOPs",id:"nops",level:2},{value:"Payloads",id:"payloads",level:2},{value:"Post",id:"post",level:2},{value:"Search",id:"search",level:2},{value:"Using modules",id:"using-modules",level:2},{value:"Sessions",id:"sessions",level:2}];function c(e){const t={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.p,{children:"#tools #Metasploit"}),"\n",(0,s.jsx)(t.p,{children:"Metasploit is the most widely used exploitation framework. Metasploit is a powerful tool that can support all phases of a penetration testing engagement, from information gathering to post-exploitation."}),"\n",(0,s.jsx)(t.p,{children:"The Metasploit Framework is a set of tools that allow information gathering, scanning, exploitation, exploit development, post-exploitation, and more. While the primary usage of the Metasploit Framework focuses on the penetration testing domain, it is also useful for vulnerability research and exploit development."}),"\n",(0,s.jsx)(t.p,{children:"The main components of the Metasploit Framework can be summarized as follows"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"msfconsole"}),": The main command-line interface."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Modules"}),": supporting modules such as exploits, scanners, payloads, etc."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Tools"}),": Stand-alone tools that will help vulnerability research, vulnerability assessment, or penetration testing. Some of these tools are msfvenom, pattern_create and pattern_offset. We will cover msfvenom within this module, but pattern_create and pattern_offset are tools useful in exploit development."]}),"\n"]}),"\n",(0,s.jsx)(t.h1,{id:"main-components-of-metasploit",children:"Main Components of Metasploit"}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.code,{children:"msfconsole"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Exploit:"})," A piece of code that uses a vulnerability present on the target system."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Vulnerability:"})," A design, coding, or logic flaw affecting the target system. The exploitation of a vulnerability can result in disclosing confidential information or allowing the attacker to execute code on the target system."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Payload:"})," An exploit will take advantage of a vulnerability. However, if we want the exploit to have the result we want (gaining access to the target system, read confidential information, etc.), we need to use a payload. Payloads are the code that will run on the target system."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"anxiliary",children:"Anxiliary"}),"\n",(0,s.jsx)(t.p,{children:"Any supporting module, such as scanners, crawlers and fuzzers, can be found here."}),"\n",(0,s.jsx)(t.h2,{id:"encoders",children:"Encoders"}),"\n",(0,s.jsx)(t.p,{children:"Encoders will allow you to encode the exploit and payload in the hope that a signature-based antivirus solution may miss them."}),"\n",(0,s.jsx)(t.p,{children:"Signature-based antivirus and security solutions have a database of known threats. They detect threats by comparing suspicious files to this database and raise an alert if there is a match. Thus encoders can have a limited success rate as antivirus solutions can perform additional checks."}),"\n",(0,s.jsx)(t.h2,{id:"evasion",children:"Evasion"}),"\n",(0,s.jsx)(t.p,{children:"While encoders will encode the payload, they should not be considered a direct attempt to evade antivirus software. On the other hand, \u201cevasion\u201d modules will try that, with more or less success."}),"\n",(0,s.jsx)(t.h2,{id:"exploits",children:"Exploits"}),"\n",(0,s.jsx)(t.p,{children:"Exploits, neatly organized by target system."}),"\n",(0,s.jsx)(t.h2,{id:"nops",children:"NOPs"}),"\n",(0,s.jsx)(t.p,{children:"NOPs (No OPeration) do nothing, literally. They are represented in the Intel x86 CPU family with 0x90, following which the CPU will do nothing for one cycle. They are often used as a buffer to achieve consistent payload sizes."}),"\n",(0,s.jsx)(t.h2,{id:"payloads",children:"Payloads"}),"\n",(0,s.jsx)(t.p,{children:"Payloads are codes that will run on the target system."}),"\n",(0,s.jsx)(t.p,{children:"Exploits will leverage a vulnerability on the target system, but to achieve the desired result, we will need a payload. Examples could be; getting a shell, loading a malware or backdoor to the target system, running a command, or launching calc.exe as a proof of concept to add to the penetration test report. Starting the calculator on the target system remotely by launching the calc.exe application is a benign way to show that we can run commands on the target system."}),"\n",(0,s.jsx)(t.p,{children:'Running command on the target system is already an important step but having an interactive connection that allows you to type commands that will be executed on the target system is better. Such an interactive command line is called a "shell". Metasploit offers the ability to send different payloads that can open shells on the target system.'}),"\n",(0,s.jsx)(t.p,{children:"You will see four different directories under payloads: adapters, singles, stagers and stages."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Adapters:"})," An adapter wraps single payloads to convert them into different formats. For example, a normal single payload can be wrapped inside a Powershell adapter, which will make a single powershell command that will execute the payload."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Singles:"})," Self-contained payloads (add user, launch notepad.exe, etc.) that do not need to download an additional component to run."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Stagers:"})," Responsible for setting up a connection channel between Metasploit and the target system. Useful when working with staged payloads. \u201cStaged payloads\u201d will first upload a stager on the target system then download the rest of the payload (stage). This provides some advantages as the initial size of the payload will be relatively small compared to the full payload sent at once."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Stages:"})," Downloaded by the stager. This will allow you to use larger sized payloads."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Metasploit has a subtle way to help you identify single (also called \u201cinline\u201d) payloads and staged payloads."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"generic/shell_reverse_tcp"}),"\n",(0,s.jsx)(t.li,{children:"windows/x64/shell/reverse_tcp"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Both are reverse Windows shells. The former is an inline (or single) payload, as indicated by the \u201c_\u201d between \u201cshell\u201d and \u201creverse\u201d. While the latter is a staged payload, as indicated by the \u201c/\u201d between \u201cshell\u201d and \u201creverse\u201d."}),"\n",(0,s.jsx)(t.h2,{id:"post",children:"Post"}),"\n",(0,s.jsx)(t.p,{children:"Post modules will be useful on the final stage of the penetration testing process listed above, post-exploitation."}),"\n",(0,s.jsx)(t.h1,{id:"msfconsole",children:"Msfconsole"}),"\n",(0,s.jsx)(t.p,{children:"The Metasploit console (msfconsole) can be used just like a regular command-line shell, which support most Linux commands."}),"\n",(0,s.jsx)(t.p,{children:"Msfconsole is managed by context; this means that unless set as a global variable, all parameter settings will be lost if you change the module you have decided to use."}),"\n",(0,s.jsx)(t.p,{children:'We will use the MS17-010 \u201cEternalblue\u201d exploit, once you type the use exploit/windows/smb/ms17_010_eternalblue\xa0command, you will see the command line prompt change from msf6 to \u201cmsf6 exploit(windows/smb/ms17_010_eternalblue)\u201d. The "EternalBlue" is an exploit allegedly developed by the U.S. National Security Agency (N.S.A.) for a vulnerability affecting the SMBv1 server on numerous Windows systems. The SMB (Server Message Block) is widely used in Windows networks for file sharing and even for sending files to printers. EternalBlue was leaked by the cybercriminal group "Shadow Brokers" in April 2017. In May 2017, this vulnerability was exploited worldwide in the WannaCry ransomware attack.'}),"\n",(0,s.jsxs)(t.p,{children:["The module to be used can also be selected with the ",(0,s.jsx)(t.code,{children:"use"}),"\xa0command followed by the number at the beginning of the search result line."]}),"\n",(0,s.jsx)(t.p,{children:'While the prompt has changed, you will notice we can still run the commands previously mentioned. This means we did not "enter" a folder as you would typically expect in an operating system command line.'}),"\n",(0,s.jsxs)(t.p,{children:["The prompt tells us we now have a context set in which we will work. You can see this by typing the ",(0,s.jsx)(t.code,{children:"show options"})," command."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"show"}),"\xa0command can be used in any context followed by a module type (auxiliary, payload, exploit, etc.) to list available modules."]}),"\n",(0,s.jsxs)(t.p,{children:["If used from the msfconsole prompt, the ",(0,s.jsx)(t.code,{children:"show"}),"\xa0command will list all modules."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"use"}),"\xa0and ",(0,s.jsx)(t.code,{children:"show options"})," commands we have seen so far are identical for all modules in Metasploit."]}),"\n",(0,s.jsxs)(t.p,{children:["You can leave the context using the ",(0,s.jsx)(t.code,{children:"back"}),"\xa0command."]}),"\n",(0,s.jsxs)(t.p,{children:["Further information on any module can be obtained by typing the ",(0,s.jsx)(t.code,{children:"info"}),"\xa0command within its context."]}),"\n",(0,s.jsxs)(t.p,{children:["Alternatively, you can use the ",(0,s.jsx)(t.code,{children:"info"}),"\xa0command followed by the module\u2019s path from the msfconsole prompt (e.g. ",(0,s.jsx)(t.code,{children:"info exploit/windows/smb/ms17_010_eternalblue"}),"). Info is not a help menu; it will display detailed information on the module such as its author, relevant sources, etc."]}),"\n",(0,s.jsx)(t.h2,{id:"search",children:"Search"}),"\n",(0,s.jsxs)(t.p,{children:["One of the most useful commands in msfconsole is ",(0,s.jsx)(t.code,{children:"search"}),". This command will search the Metasploit Framework database for modules relevant to the given search parameter. You can conduct searches using CVE numbers, exploit names (eternalblue, heartbleed, etc.), or target system."]}),"\n",(0,s.jsxs)(t.p,{children:["The output of the ",(0,s.jsx)(t.code,{children:"search"}),"\xa0command provides an overview of each returned module. You may notice the \u201cname\u201d column already gives more information than just the module name. You can see the type of module (auxiliary, exploit, etc.) and the category of the module (scanner, admin, windows, Unix, etc.). You can use any module returned in a search result with the command use followed by the number at the beginning of the result line. (e.g. ",(0,s.jsx)(t.code,{children:"use 0"})," instead of ",(0,s.jsx)(t.code,{children:"use auxiliary/admin/smb/ms17_010_command"}),")"]}),"\n",(0,s.jsx)(t.p,{children:"Another essential piece of information returned is in the \u201crank\u201d column. Exploits are rated based on their reliability."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{alt:"Rank",src:n(1641).A+"",width:"909",height:"450"})}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.a,{href:"https://github.com/rapid7/metasploit-framework/wiki/Exploit-Ranking",children:"Source"})}),"\n",(0,s.jsx)(t.p,{children:"You can direct the search function using keywords such as type and platform."}),"\n",(0,s.jsxs)(t.p,{children:["For example, if we wanted our search results to only include auxiliary modules, we could set the type to auxiliary. ",(0,s.jsx)(t.code,{children:"search type:auxiliary telnet"})," command."]}),"\n",(0,s.jsx)(t.p,{children:"Please remember that exploits take advantage of a vulnerability on the target system and may always show unexpected behavior. A low-ranking exploit may work perfectly, and an excellent ranked exploit may not, or worse, crash the target system."}),"\n",(0,s.jsx)(t.h1,{id:"working-with-modules",children:"Working with modules"}),"\n",(0,s.jsxs)(t.p,{children:["Once you have entered the context of a module using the ",(0,s.jsx)(t.code,{children:"use"}),"\xa0command followed by the module name, you will need to set parameters."]}),"\n",(0,s.jsxs)(t.p,{children:["All parameters are set using the same command syntax:",(0,s.jsx)(t.br,{}),"\n",(0,s.jsx)(t.code,{children:"set PARAMETER_NAME VALUE"})]}),"\n",(0,s.jsx)(t.p,{children:"Before we proceed, remember always to check the msfconsole prompt to ensure you are in the right context. When dealing with Metasploit, you may see five different prompts"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"The regular command prompt:"})," You can not use Metasploit commands here.\nRegular command prompt",(0,s.jsx)(t.code,{children:"root@ip-10-10-XX-XX:~#"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"The msfconsole prompt:"})," msf6 (or msf5 depending on your installed version) is the msfconsole prompt. As you can see, no context is set here, so context-specific commands to set parameters and run modules can not be used here.\nMetasploit command prompt",(0,s.jsx)(t.code,{children:"msf6 >"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"A context prompt:"})," Once you have decided to use a module and used the set command to chose it, the msfconsole will show the context. You can use context-specific commands (e.g. set RHOSTS 10.10.x.x) here.\nA context command prompt",(0,s.jsx)(t.code,{children:"msf6 exploit(windows/smb/ms17_010_eternalblue) >"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"The Meterpreter prompt:"})," Meterpreter is an important payload. This means a Meterpreter agent was loaded to the target system and connected back to you. You can use Meterpreter specific commands here.\nA Meterpreter command prompt",(0,s.jsx)(t.code,{children:"meterpreter >"})]}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"A shell on the target system:"})," Once the exploit is completed, you may have access to a command shell on the target system. This is a regular command line, and all commands typed here run on the target system.",(0,s.jsx)(t.br,{}),"\n","A Meterpreter command prompt",(0,s.jsx)(t.code,{children:"C:\\Windows\\system32>"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"Parameters you will often use are"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"RHOSTS:"})," \u201cRemote host\u201d, the IP address of the target system. A single IP address or a network range can be set. This will support the CIDR (Classless Inter-Domain Routing) notation (/24, /16, etc.) or a network range (10.10.10.x \u2013 10.10.10.y). You can also use a file where targets are listed, one target per line using file:/path/of/the/target_file.txt, as you can see below."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"RPORT:"})," \u201cRemote port\u201d, the port on the target system the vulnerable application is running on."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"PAYLOAD:"})," The payload you will use with the exploit."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"LHOST:"})," \u201cLocalhost\u201d, the attacking machine IP address."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"LPORT:"})," \u201cLocal port\u201d, the port you will use for the reverse shell to connect back to. This is a port on your attacking machine, and you can set it to any port not used by any other application."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"SESSION:"})," Each connection established to the target system using Metasploit will have a session ID. You will use this with post-exploitation modules that will connect to the target system using an existing connection."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["You can override any set parameter using the set command again with a different value. You can also clear any parameter value using the ",(0,s.jsx)(t.code,{children:"unset"})," command or clear all set parameters with the ",(0,s.jsx)(t.code,{children:"unset all"})," command."]}),"\n",(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"setg"}),"\xa0command to set values that will be used for all modules. The ",(0,s.jsx)(t.code,{children:"setg"}),"\xa0command is used like the set command. The difference is that if you use the ",(0,s.jsx)(t.code,{children:"set"}),"\xa0command to set a value using a module and you switch to another module, you will need to set the value again. The ",(0,s.jsx)(t.code,{children:"setg"})," command allows you to set the value so it can be used by default across different modules. You can clear any value set with ",(0,s.jsx)(t.code,{children:"setg"}),"\xa0using ",(0,s.jsx)(t.code,{children:"unsetg"}),"."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"setg"}),"\xa0command sets a global value that will be used until you exit Metasploit or clear it using the ",(0,s.jsx)(t.code,{children:"unsetg"}),"\xa0command."]}),"\n",(0,s.jsx)(t.h2,{id:"using-modules",children:"Using modules"}),"\n",(0,s.jsxs)(t.p,{children:["Once all module parameters are set, you can launch the module using the ",(0,s.jsx)(t.code,{children:"exploit"}),"\xa0command. Metasploit also supports the ",(0,s.jsx)(t.code,{children:"run"}),"\xa0command, which is an alias created for the ",(0,s.jsx)(t.code,{children:"exploit"}),"\xa0command as the word exploit did not make sense when using modules that were not exploits (port scanners, vulnerability scanners, etc.)."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"exploit"}),"\xa0command can be used without any parameters or using the \u201c",(0,s.jsx)(t.code,{children:"-z"}),"\u201d parameter."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"exploit -z"})," command will run the exploit and background the session as soon as it opens."]}),"\n",(0,s.jsx)(t.p,{children:"This will return you the context prompt from which you have run the exploit."}),"\n",(0,s.jsxs)(t.p,{children:["Some modules support the ",(0,s.jsx)(t.code,{children:"check"}),"\xa0option. This will check if the target system is vulnerable without exploiting it."]}),"\n",(0,s.jsx)(t.h2,{id:"sessions",children:"Sessions"}),"\n",(0,s.jsx)(t.p,{children:"Once a vulnerability has been successfully exploited, a session will be created. This is the communication channel established between the target system and Metasploit."}),"\n",(0,s.jsxs)(t.p,{children:["You can use the ",(0,s.jsx)(t.code,{children:"background"}),"\xa0command to background the session prompt and go back to the msfconsole prompt."]}),"\n",(0,s.jsxs)(t.p,{children:["Alternatively,\xa0",(0,s.jsx)(t.code,{children:"CTRL+Z"})," can be used to background sessions."]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"sessions"}),"\xa0command can be used from the msfconsole prompt or any context to see the existing sessions."]}),"\n",(0,s.jsxs)(t.p,{children:["To interact with any session, you can use the ",(0,s.jsx)(t.code,{children:"sessions -i"}),"\xa0command followed by the desired session number."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1641:(e,t,n)=>{n.d(t,{A:()=>s});const s=n.p+"assets/images/Metasploit_Introduction_1-43e1eb12bf43560b073586fd073d4958.png"},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var s=n(6540);const o={},a=s.createContext(o);function i(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);