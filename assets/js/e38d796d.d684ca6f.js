"use strict";(self.webpackChunkTHM_Notes=self.webpackChunkTHM_Notes||[]).push([[7533],{8641:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var n=t(4848),i=t(8453);const r={},o="Manual Enumeration",a={id:"Others/Web Enumeration",title:"Web Enumeration",description:"More often than not, the results of using our own initiative over automated scans bare more results.",source:"@site/docs/Others/Web Enumeration.md",sourceDirName:"Others",slug:"/Others/Web Enumeration",permalink:"/docs/Others/Web Enumeration",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"THMSidebar",previous:{title:"Virtualization and Containers",permalink:"/docs/Others/Virtualization and Containers"}},l={},d=[{value:"Using our browsers Development Console",id:"using-our-browsers-development-console",level:2},{value:"Inspecting Tool",id:"inspecting-tool",level:2},{value:"Useful Global Flags",id:"useful-global-flags",level:2},{value:"&quot;dir&quot; Mode",id:"dir-mode",level:2},{value:"Using &quot;dir&quot; Mode",id:"using-dir-mode",level:2},{value:"Other Useful Flags",id:"other-useful-flags",level:2},{value:"The -k Flag",id:"the--k-flag",level:2},{value:"&quot;dns&quot; Mode",id:"dns-mode",level:2},{value:"Using &quot;dns&quot; Mode",id:"using-dns-mode",level:2},{value:"Other Useful Flags",id:"other-useful-flags-1",level:2},{value:"&quot;vhost&quot; Mode",id:"vhost-mode",level:2},{value:"Using &quot;vhost&quot; Mode",id:"using-vhost-mode",level:2},{value:"Other Useful Flags",id:"other-useful-flags-2",level:2},{value:"Kali Default Lists",id:"kali-default-lists",level:2},{value:"Non-Standard Lists",id:"non-standard-lists",level:2},{value:"A Primer on WPScan&#39;s Database",id:"a-primer-on-wpscans-database",level:2},{value:"Enumeration for Installed Themes",id:"enumeration-for-installed-themes",level:2},{value:"Enumerating for Installed Plugins",id:"enumerating-for-installed-plugins",level:2},{value:"Enumerating for Users",id:"enumerating-for-users",level:2},{value:"The &quot;Vulnerable&quot; Flag",id:"the-vulnerable-flag",level:2},{value:"Performing a Password Attack",id:"performing-a-password-attack",level:2},{value:"Adjusting WPScan&#39;s Aggressiveness (WAF)",id:"adjusting-wpscans-aggressiveness-waf",level:2},{value:"Summary - Cheatsheet",id:"summary---cheatsheet",level:2},{value:"Basic Scanning",id:"basic-scanning",level:2},{value:"Scanning Multiple Hosts &amp; Ports",id:"scanning-multiple-hosts--ports",level:2},{value:"Introduction to Plugins",id:"introduction-to-plugins",level:2},{value:"Verbosing our Scan",id:"verbosing-our-scan",level:2},{value:"Tuning Your Scan for Vulnerability Searching",id:"tuning-your-scan-for-vulnerability-searching",level:2},{value:"Saving Your Findings",id:"saving-your-findings",level:2}];function h(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.p,{children:"#Web"}),"\n",(0,n.jsx)(s.h1,{id:"manual-enumeration",children:"Manual Enumeration"}),"\n",(0,n.jsx)(s.p,{children:"More often than not, the results of using our own initiative over automated scans bare more results."}),"\n",(0,n.jsx)(s.h2,{id:"using-our-browsers-development-console",children:"Using our browsers Development Console"}),"\n",(0,n.jsx)(s.p,{children:"Modern-day browsers including Chrome and Firefox have a suite of tools located in the \"Developer Tools/Console\". We're going to be discussing Firefox's, however, Chrome has a very similar suite. This suite includes a range of tools including"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Viewing page source code"}),"\n",(0,n.jsx)(s.li,{children:"Finding assets"}),"\n",(0,n.jsx)(s.li,{children:"Debugging & executing code such as javascript on the client-side (our Browser)"}),"\n"]}),"\n",(0,n.jsx)(s.p,{children:'Using "F12" on our keyboard, this is a shortcut to launch this suite of tools.'}),"\n",(0,n.jsx)(s.h2,{id:"inspecting-tool",children:"Inspecting Tool"}),"\n",(0,n.jsx)(s.p,{children:'At first, we can see the web page with the heading "Hi Friend" and a section of the screen filled with the "Inspector" tool. This allows us to view the HTML source code of the webpage we have loaded in our browser. This often contains things such as developer comments, and the name to certain aspects of web page features including forms and the likes.\xa0'}),"\n",(0,n.jsxs)(s.p,{children:["Developers often leave behind comments in the form of the ",(0,n.jsx)(s.strong,{})," tags...for example:\xa0 which are not rendered in the browser."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h1,{id:"introduction-to-gobuster",children:"Introduction to Gobuster"}),"\n",(0,n.jsxs)(s.p,{children:["Gobuster is written in\xa0",(0,n.jsx)(s.a,{href:"https://golang.org/",children:"Go"}),". Go is an open-source, low-level language (much like C or Rust) developed by a team at Google and other contributors."]}),"\n",(0,n.jsx)(s.h2,{id:"useful-global-flags",children:"Useful Global Flags"}),"\n",(0,n.jsxs)(s.p,{children:["There are some useful ",(0,n.jsx)(s.a,{href:"https://github.com/OJ/gobuster",children:"Global flags"})," that can be used as well."]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Flag"}),(0,n.jsx)(s.th,{children:"Long Flag"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-t"}),(0,n.jsx)(s.td,{children:"--threads"}),(0,n.jsx)(s.td,{children:"Number of concurrent threads (default 10)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-v"}),(0,n.jsx)(s.td,{children:"--verbose"}),(0,n.jsx)(s.td,{children:"Verbose output"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-z"}),(0,n.jsx)(s.td,{children:"--no-progress"}),(0,n.jsx)(s.td,{children:"Don't display progress"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-q"}),(0,n.jsx)(s.td,{children:"--quiet"}),(0,n.jsx)(s.td,{children:"Don't print the banner and other noise"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-o"}),(0,n.jsx)(s.td,{children:"--output"}),(0,n.jsx)(s.td,{children:"Output file to write results to"})]})]})]}),"\n",(0,n.jsx)(s.p,{children:"I will typically change the number of threads to 64 to increase the speed of my scans. If you don't change the number of threads, Gobuster can be a little slow."}),"\n",(0,n.jsx)(s.h1,{id:"gobuster-modes",children:"Gobuster Modes"}),"\n",(0,n.jsx)(s.h2,{id:"dir-mode",children:'"dir" Mode'}),"\n",(0,n.jsx)(s.p,{children:'Dirbuster has a "dir" mode that allows the user to enumerate website directories. This is useful when you are performing a penetration test and would like to see what the directory structure of a website is. Often, directory structures of websites and web-apps follow a certain convention, making them susceptible to brute-forcing using wordlists.'}),"\n",(0,n.jsx)(s.p,{children:"Gobuster is powerful because it not only allows you to scan the website, but it will return the status codes as well. This will immediately let you know if you as an outside user can request that directory or not. Additional functionality of Gobuster is that it lets you search for files as well with the addition of a simple flag."}),"\n",(0,n.jsx)(s.h2,{id:"using-dir-mode",children:'Using "dir" Mode'}),"\n",(0,n.jsxs)(s.p,{children:['To use "dir" mode, you start by typing\xa0',(0,n.jsx)(s.code,{children:"gobuster dir"}),", after that, you will need to add the URL and wordlist using the ",(0,n.jsx)(s.code,{children:"-u"})," and ",(0,n.jsx)(s.code,{children:"-w"})," options.\n",(0,n.jsx)(s.code,{children:"gobuster dir -u http://10.10.10.10\xa0-w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt"})]}),"\n",(0,n.jsxs)(s.p,{children:["Note: The URL is going to be the base path where Gobuster starts looking from. So the URL above is using the root web directory. For example, in a typical Apache installation on Linux, this is ",(0,n.jsx)(s.em,{children:"/var/www/html"}),'. So if you have a "',(0,n.jsx)(s.strong,{children:"products"}),"\" directory and you want to enumerate that directory, you'd set the URL as ",(0,n.jsxs)(s.em,{children:[(0,n.jsx)(s.a,{href:"http://10.10.10.10/**products",children:"http://10.10.10.10/**products"}),"**"]}),". You can also think of this like ",(0,n.jsx)(s.em,{children:(0,n.jsx)(s.a,{href:"http://example.com/path/to/folder",children:"http://example.com/path/to/folder"})}),". Also notice that I specified the protocol of HTTP. This is important and required."]}),"\n",(0,n.jsx)(s.p,{children:"This is a very common, simple, and straightforward command for Gobuster. However, there are some other helpful flags that can be useful in certain scenarios."}),"\n",(0,n.jsx)(s.h2,{id:"other-useful-flags",children:"Other Useful Flags"}),"\n",(0,n.jsxs)(s.p,{children:["These flags are useful in certain scenarios.\xa0 Note that these are not all of the flag options, but some of the more common ones that you'll use in penetration tests and in capture the flag events. If you'd like the full list, you can see that\xa0",(0,n.jsx)(s.a,{href:"https://github.com/OJ/gobuster#dir-mode-options",children:"here"}),"."]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Flag"}),(0,n.jsx)(s.th,{children:"Long Flag"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-c"}),(0,n.jsx)(s.td,{children:"--cookies"}),(0,n.jsx)(s.td,{children:"Cookies to use for requests"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-x"}),(0,n.jsx)(s.td,{children:"--extensions"}),(0,n.jsx)(s.td,{children:"File extension(s) to search for"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-H"}),(0,n.jsx)(s.td,{children:"--headers"}),(0,n.jsx)(s.td,{children:"Specify HTTP headers, -H 'Header1: val1' -H 'Header2: val2'"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-k"}),(0,n.jsx)(s.td,{children:"--no-tls-validation"}),(0,n.jsx)(s.td,{children:"Skip TLS certificate verification"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-n"}),(0,n.jsx)(s.td,{children:"--no-status"}),(0,n.jsx)(s.td,{children:"Don't print status codes"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-P"}),(0,n.jsx)(s.td,{children:"--password"}),(0,n.jsx)(s.td,{children:"Password for Basic Auth"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-s"}),(0,n.jsx)(s.td,{children:"--status-codes"}),(0,n.jsx)(s.td,{children:"Positive status codes"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-b"}),(0,n.jsx)(s.td,{children:"--status-codes-blacklist"}),(0,n.jsx)(s.td,{children:"Negative status codes"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-U"}),(0,n.jsx)(s.td,{children:"--username"}),(0,n.jsx)(s.td,{children:"Username for Basic Auth"})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["A very common use of Gobuster's \"dir\" mode is the ability to use it's\xa0",(0,n.jsx)(s.code,{children:"-x"})," or ",(0,n.jsx)(s.code,{children:"--extensions"}),"\xa0flag to search for the contents of directories that you have already enumerated by providing a list of file extensions. File extensions are generally representative of the data they may contain. For example, ",(0,n.jsx)(s.strong,{children:".conf"})," or ",(0,n.jsx)(s.strong,{children:".config"}),"\xa0files usually contain configurations for the application - including sensitive info such as database credentials."]}),"\n",(0,n.jsxs)(s.p,{children:["A few other files that you may wish to search for are .txt files or other web application pages such as ",(0,n.jsx)(s.strong,{children:".html"})," or ",(0,n.jsx)(s.strong,{children:".php"}),"."]}),"\n",(0,n.jsx)(s.h2,{id:"the--k-flag",children:"The -k Flag"}),"\n",(0,n.jsx)(s.p,{children:"The -k flag is special because it has an important use during penetration tests and captures the flag events.If HTTPS is enabled, you will most likely encounter an invalid cert error."}),"\n",(0,n.jsxs)(s.p,{children:["In instances like this, if you try to run Gobuster against this without the ",(0,n.jsx)(s.code,{children:"-k"})," flag, it won't return anything and will most likely error out with something gross. Just add the ",(0,n.jsx)(s.code,{children:"-k"})," flag to your scan and it will bypass this invalid certification and continue scanning and deliver the goods."]}),"\n",(0,n.jsx)(s.p,{children:'Note:\xa0This flag can be used with "dir" mode and "vhost" modes'}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"dns-mode",children:'"dns" Mode'}),"\n",(0,n.jsx)(s.p,{children:"This allows Gobuster to brute-force subdomains. During a penetration test (or capture the flag), it's important to check sub-domains of your target's top domain. Just because something is patched in the regular domain, does not mean it is patched in the sub-domain. There may be a vulnerability for you to exploit in one of these sub-domains."}),"\n",(0,n.jsx)(s.h2,{id:"using-dns-mode",children:'Using "dns" Mode'}),"\n",(0,n.jsxs)(s.p,{children:['To use "dns" mode, you start by typing\xa0',(0,n.jsx)(s.code,{children:"gobuster dns"}),". After that, you will need to add the domain and wordlist using the -d and -w options.\n",(0,n.jsx)(s.code,{children:"gobuster dns -d mydomain.thm -w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt"})]}),"\n",(0,n.jsx)(s.h2,{id:"other-useful-flags-1",children:"Other Useful Flags"}),"\n",(0,n.jsxs)(s.p,{children:["-d and -w are the main flags that you'll need for\xa0",(0,n.jsx)(s.em,{children:"most"}),"\xa0of your scans. But there are a few others that are worth mentioning that we can go over."]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Flag"}),(0,n.jsx)(s.th,{children:"Long Flag"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-c"}),(0,n.jsx)(s.td,{children:"--show-cname"}),(0,n.jsx)(s.td,{children:"Show CNAME Records (cannot be used with '-i' option)"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-i"}),(0,n.jsx)(s.td,{children:"--show-ips"}),(0,n.jsx)(s.td,{children:"Show IP Addresses"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"-r"}),(0,n.jsx)(s.td,{children:"--resolver"}),(0,n.jsxs)(s.td,{children:["Use custom DNS server (format server.com or server.com",":port",")"]})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["There aren't many additional flags to be used with this mode, but these are the main useful ones that you may use from time to time. If you'd like to see the full list of flags that can be used with this mode, check out the\xa0",(0,n.jsx)(s.a,{href:"https://github.com/OJ/gobuster#dns-mode-help",children:"documentation"})]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"vhost-mode",children:'"vhost" Mode'}),"\n",(0,n.jsx)(s.p,{children:"This allows Gobuster to brute-force virtual hosts. Virtual hosts are different websites on the same machine. In some instances, they can appear to look like sub-domains, but don't be deceived! Virtual Hosts are IP based and are running on the same server. This is not usually apparent to the end-user. On an engagement, it may be worthwhile to just run Gobuster in this mode to see if it comes up with anything. You never know, it might just find something."}),"\n",(0,n.jsx)(s.p,{children:"Virtual hosts would be a good way to hide a completely different website if nothing turned up on your main port 80/443 scan."}),"\n",(0,n.jsx)(s.h2,{id:"using-vhost-mode",children:'Using "vhost" Mode'}),"\n",(0,n.jsxs)(s.p,{children:['To use "vhost" mode, you start by typing\xa0',(0,n.jsx)(s.code,{children:"gobuster vhost"}),". After that, you will need to add the domain and wordlist using the ",(0,n.jsx)(s.code,{children:"-u"})," and ",(0,n.jsx)(s.code,{children:"-w"})," options.\n",(0,n.jsx)(s.code,{children:"gobuster vhost -u http://example.com\xa0-w /usr/share/wordlists/SecLists/Discovery/DNS/subdomains-top1million-5000.txt"})]}),"\n",(0,n.jsx)(s.h2,{id:"other-useful-flags-2",children:"Other Useful Flags"}),"\n",(0,n.jsxs)(s.p,{children:['A lot of the same flags that are useful for "dir" mode actually still apply to virtual host mode. Please check out the "dir" mode section for these and take a look at the\xa0',(0,n.jsx)(s.a,{href:"https://github.com/OJ/gobuster#vhost-mode-options",children:"official documentation"}),"\xa0for the full list. There's really too many that are similar to put them back here."]}),"\n",(0,n.jsx)(s.h1,{id:"useful-wordlists",children:"Useful Wordlists"}),"\n",(0,n.jsx)(s.h2,{id:"kali-default-lists",children:"Kali Default Lists"}),"\n",(0,n.jsx)(s.p,{children:'Anything with a wildcard (*) character indicates there\'s more than one list that matches. Keep in mind, a lot of these can be interchanged between modes. For example, "dir" mode wordlists (such as ones from the dirbuster directory) will contain words like "admin", "index", "about", "events", etc. A lot of these could be subdomains as well.'}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"/usr/share/wordlists/dirbuster/directory-list-2.3-*.txt"}),"\n",(0,n.jsx)(s.li,{children:"/usr/share/wordlists/dirbuster/directory-list-1.0.txt"}),"\n",(0,n.jsx)(s.li,{children:"/usr/share/wordlists/dirb/big.txt"}),"\n",(0,n.jsx)(s.li,{children:"/usr/share/wordlists/dirb/common.txt"}),"\n",(0,n.jsx)(s.li,{children:"/usr/share/wordlists/dirb/small.txt"}),"\n",(0,n.jsx)(s.li,{children:"/usr/share/wordlists/dirb/extensions_common.txt - Useful for when fuzzing for files"}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"non-standard-lists",children:"Non-Standard Lists"}),"\n",(0,n.jsxs)(s.p,{children:["Daniel Miessler has created an amazing GitHub repo called\xa0",(0,n.jsx)(s.a,{href:"https://github.com/danielmiessler/SecLists",children:"SecLists"}),". It compiles many different lists used for many different things."]}),"\n",(0,n.jsxs)(s.p,{children:["You can\xa0",(0,n.jsx)(s.code,{children:"sudo apt install seclists"}),"\xa0and get the entire repo."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h1,{id:"introduction-to-wpscan",children:"Introduction to WPScan"}),"\n",(0,n.jsx)(s.p,{children:"The WPScan framework is capable of enumerating & researching a few security vulnerability categories present in WordPress sites - including - but not limited to"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Sensitive Information Disclosure (Plugin & Theme installation versions for disclosed vulnerabilities or CVE's)"}),"\n",(0,n.jsx)(s.li,{children:"Path Discovery (Looking for misconfigured file permissions i.e. wp-config.php)"}),"\n",(0,n.jsx)(s.li,{children:"Weak Password Policies (Password bruteforcing)"}),"\n",(0,n.jsx)(s.li,{children:"Presence of Default Installation (Looking for default files)"}),"\n",(0,n.jsx)(s.li,{children:"Testing Web Application Firewalls (Common WAF plugins)"}),"\n"]}),"\n",(0,n.jsx)(s.h2,{id:"a-primer-on-wpscans-database",children:"A Primer on WPScan's Database"}),"\n",(0,n.jsxs)(s.p,{children:["WPScan uses information within a local database as a primary reference point when enumerating for themes and plugins. As we'll come to detail later, a technique that WPScan uses when enumerating is looking for common themes and plugins. Before using WPScan, it is highly recommended that you update this database before performing any scans.\n",(0,n.jsx)(s.code,{children:"wpscan --update"})]}),"\n",(0,n.jsx)(s.h1,{id:"wpscan-mode",children:"WPScan Mode"}),"\n",(0,n.jsx)(s.h2,{id:"enumeration-for-installed-themes",children:"Enumeration for Installed Themes"}),"\n",(0,n.jsx)(s.p,{children:'WPScan has a few methods of determining the active theme on a running WordPress installation. At a premise, it boils down to a technique that we can manually do ourselves. Simply, we can look at the assets our web browser loads and then looks for the location of these on the webserver. Using the "Network" tab in your web browsers developer tools, you can see what files are loaded when you visit a webpage.'}),"\n",(0,n.jsxs)(s.p,{children:["However, let's use WPScan to speed this process up by using the ",(0,n.jsx)(s.code,{children:"--enumerate"})," flag with the ",(0,n.jsx)(s.code,{children:"t"})," argument like so\n",(0,n.jsx)(s.code,{children:"wpscan --url http://cmnatics.playground/\xa0--enumerate t"})]}),"\n",(0,n.jsxs)(s.p,{children:['The great thing about WPScan is that the tool lets you know how it determined the results it has got. In this case, we\'re told that the "twentytwenty" theme was confirmed by scanning "',(0,n.jsx)(s.em,{children:"Known Locations"}),'". The "twentytwenty" theme is the default WordPress theme for WordPress versions in 2020.']}),"\n",(0,n.jsx)(s.h2,{id:"enumerating-for-installed-plugins",children:"Enumerating for Installed Plugins"}),"\n",(0,n.jsxs)(s.p,{children:['A very common feature of webservers is "Directory Listing" and is often enabled by default. Simply, "Directory Listing" is the listing of files in the directory that we are navigating to (just as if we were to use Windows Explorer or Linux\'s ',(0,n.jsx)(s.code,{children:"ls"})," command. URL's in this context are very similar to file paths. The URL ",(0,n.jsx)(s.a,{href:"http://cmnatics.playground/a/directory",children:"http://cmnatics.playground/a/directory"}),"\xa0is actually the configured root of the ",(0,n.jsx)(s.em,{children:"webserver/a/directory"})]}),"\n",(0,n.jsx)(s.p,{children:'"Directory Listing" occurs when there is no file present that the webserver has been told to process. A very common file is "index.html" and "index.php". As these files aren\'t present in /a/directory, the contents are instead displayed'}),"\n",(0,n.jsx)(s.p,{children:"WPScan can leverage this feature as one technique to look for plugins installed. Since they will all be located in /wp-content/plugins/pluginname, WPScan can enumerate for common/known plugins."}),"\n",(0,n.jsxs)(s.p,{children:["Reading through WordPress' developer documentation, we can learn about \"",(0,n.jsx)(s.a,{href:"https://developer.wordpress.org/plugins/wordpress-org/how-your-readme-txt-works/#how-the-readme-is-parsed",children:"Plugin Readme's"}),'" to figure out how WPScan determined the version number. Simply, plugins must have a "README.txt" file. This file contains meta-information such as the plugin name, the versions of WordPress it is compatible with and a description.']}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.a,{href:"https://developer.wordpress.org/plugins/wordpress-org/how-your-readme-txt-works/#example-readme",children:"An Example ReadMe. (WordPress Developer Documentation., 2021)"})}),"\n",(0,n.jsxs)(s.p,{children:["WPScan uses additional methods to discover plugins (such as looking for references or embeds on pages for plugin assets). We can use the\xa0",(0,n.jsx)(s.code,{children:"--enumerate"}),"\xa0flag with the ",(0,n.jsx)(s.code,{children:"p"}),"\xa0argument like so\n",(0,n.jsx)(s.code,{children:"wpscan --url http://cmnatics.playground/\xa0--enumerate p"})]}),"\n",(0,n.jsx)(s.h2,{id:"enumerating-for-users",children:"Enumerating for Users"}),"\n",(0,n.jsx)(s.p,{children:"We've highlighted that WPScan is capable of performing brute-forcing attacks. Whilst we must provide a password list such as rockyou.txt, the way how WPScan enumerates for users is interestingly simple. WordPress sites use authors for posts. Authors are in fact a type of user."}),"\n",(0,n.jsxs)(s.p,{children:["This scan was performed by\xa0using the\xa0",(0,n.jsx)(s.code,{children:"--enumerate"}),"\xa0flag with the ",(0,n.jsx)(s.code,{children:"u"}),"\xa0argument like so\n",(0,n.jsx)(s.code,{children:"wpscan --url http://cmnatics.playground/\xa0--enumerate u"})]}),"\n",(0,n.jsx)(s.h2,{id:"the-vulnerable-flag",children:'The "Vulnerable" Flag'}),"\n",(0,n.jsx)(s.p,{children:"At the moment, we'd have to look at the output and use sites such as MITRE, NVD and CVEDetails to look up the names of these plugins and the version numbers to determine any vulnerabilities."}),"\n",(0,n.jsxs)(s.p,{children:["WPScan has the ",(0,n.jsx)(s.code,{children:"v"})," argument for the ",(0,n.jsx)(s.code,{children:"--enumerate"})," flag. We provide this argument alongside another (such as ",(0,n.jsx)(s.code,{children:"p"})," for plugins). For example, our syntax would like so:\xa0",(0,n.jsx)(s.code,{children:"wpscan --url http://cmnatics.playground/ --enumerate vp"}),"\xa0"]}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.strong,{children:"Note, that this requires setting up WPScan to use the WPVulnDB API"})}),"\n",(0,n.jsx)(s.h2,{id:"performing-a-password-attack",children:"Performing a Password Attack"}),"\n",(0,n.jsxs)(s.p,{children:["After determining a list of possible usernames on the WordPress install, we can use WPScan to perform a bruteforcing technique against the username we specify and a password list that we provide. Simply, we use the output of our username enumeration to build a command like so\n",(0,n.jsx)(s.code,{children:"wpscan \u2013-url http://cmnatics.playground \u2013-passwords rockyou.txt \u2013-usernames cmnatic"})]}),"\n",(0,n.jsx)(s.h2,{id:"adjusting-wpscans-aggressiveness-waf",children:"Adjusting WPScan's Aggressiveness (WAF)"}),"\n",(0,n.jsx)(s.p,{children:'Unless specified, WPScan will try to be as least "noisy" as possible. Lots of requests to a web server can trigger things such as firewalls and ultimately result in you being blocked by the server.'}),"\n",(0,n.jsxs)(s.p,{children:["This means that some plugins and themes may be missed by our WPScan. Luckily, we can use arguments such as\xa0",(0,n.jsx)(s.code,{children:"--plugins-detection"})," and an aggressiveness profile (passive/aggressive) to specify this.\n",(0,n.jsx)(s.code,{children:"--plugins-detection aggressive"})]}),"\n",(0,n.jsx)(s.h2,{id:"summary---cheatsheet",children:"Summary - Cheatsheet"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Flag"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Full Example"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"p"}),(0,n.jsx)(s.td,{children:"Enumerate Plugins"}),(0,n.jsx)(s.td,{children:"--enumerate p"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"t"}),(0,n.jsx)(s.td,{children:"Enumerate Themes"}),(0,n.jsx)(s.td,{children:"--enumerate t"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"u"}),(0,n.jsx)(s.td,{children:"Enumerate Usernames"}),(0,n.jsx)(s.td,{children:"--enumerate -u"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"v"}),(0,n.jsx)(s.td,{children:"Use WPVulnDB to cross-reference for vulnerabilities. Example command looks for vulnerable plugins (p)"}),(0,n.jsx)(s.td,{children:"--enumerate vp"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"aggressive"}),(0,n.jsx)(s.td,{children:"This is an aggressiveness profile for WPScan to use."}),(0,n.jsx)(s.td,{children:"--plugins-detection aggressive"})]})]})]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h1,{id:"introduction-to-nikto",children:"Introduction to Nikto"}),"\n",(0,n.jsx)(s.p,{children:"Nikto has made leaps and bounds over the years and has proven to be a very popular vulnerability scanner due to being both open-source nature and feature-rich. Nikto is capable of performing an assessment on all types of webservers (and isn't application-specific such as WPScan.). Nikto can be used to discover possible vulnerabilities including"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Sensitive files"}),"\n",(0,n.jsxs)(s.li,{children:["Outdated servers and programs (i.e. ",(0,n.jsx)(s.a,{href:"https://httpd.apache.org/security/vulnerabilities_24.html",children:"vulnerable web server installs"}),")"]}),"\n",(0,n.jsx)(s.li,{children:"Common server and software misconfigurations (Directory indexing, cgi scripts, x-ss protections)"}),"\n"]}),"\n",(0,n.jsx)(s.h1,{id:"nikto-modes",children:"Nikto Modes"}),"\n",(0,n.jsx)(s.h2,{id:"basic-scanning",children:"Basic Scanning"}),"\n",(0,n.jsxs)(s.p,{children:["The most basic scan can be performed by using the -h flag and providing an IP address or domain name as an argument. This scan type will retrieve the headers advertised by the webserver or application (I.e. Apache2, Apache Tomcat, Jenkins or JBoss) and will look for any sensitive files or directories (i.e. login.php, /admin/, etc)\n",(0,n.jsx)(s.code,{children:"nikto -h vulnerable_ip"})]}),"\n",(0,n.jsx)(s.h2,{id:"scanning-multiple-hosts--ports",children:"Scanning Multiple Hosts & Ports"}),"\n",(0,n.jsxs)(s.p,{children:["Nikto is extensive in the sense that we can provide multiple arguments in a way that's similar to tools such as Nmap. In fact, so much so, we can take input directly from an Nmap scan to scan a host range. By scanning a subnet, we can look for hosts across an entire network range. We must instruct Nmap to output a scan into a format that is friendly for Nikto to read using Nmap's\xa0\xa0",(0,n.jsx)(s.code,{children:"-oG"}),"\xa0 flags."]}),"\n",(0,n.jsxs)(s.p,{children:["For example, we can scan 172.16.0.0/24 (subnet mask 255.255.255.0, resulting in 254 possible hosts) with Nmap (using the default web port of 80) and parse the output to Nikto like so: ",(0,n.jsx)(s.code,{children:"nmap -p80 172.16.0.0/24 -oG - | nikto -h -"}),"\xa0"]}),"\n",(0,n.jsxs)(s.p,{children:["There are not many circumstances where you would use this other than when you have gained access to a network. A much more common scenario will be scanning multiple ports on one specific host. We can do this by using the ",(0,n.jsx)(s.code,{children:"-p"})," flag and providing a list of port numbers delimited by a comma - such as the following: ",(0,n.jsx)(s.code,{children:"nikto -h 10.10.10.1 -p 80,8000,8080"})]}),"\n",(0,n.jsx)(s.h2,{id:"introduction-to-plugins",children:"Introduction to Plugins"}),"\n",(0,n.jsxs)(s.p,{children:["Plugins further extend the capabilities of Nikto. Using information gathered from our basic scans, we can pick and choose plugins that are appropriate to our target. You can use the ",(0,n.jsx)(s.code,{children:"--list-plugins"})," flag with Nikto to list the plugins or ",(0,n.jsx)(s.a,{href:"https://github.com/sullo/nikto/wiki/Plugin-list",children:"view the whole list in an easier to read format online"}),"."]}),"\n",(0,n.jsx)(s.p,{children:"Some interesting plugins include:"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Plugin Name"}),(0,n.jsx)(s.th,{children:"Description"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"apacheusers"}),(0,n.jsx)(s.td,{children:"Attempt to enumerate Apache HTTP Authentication Users"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"cgi"}),(0,n.jsx)(s.td,{children:"Look for CGI scripts that we may be able to exploit"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"robots"}),(0,n.jsx)(s.td,{children:"Analyse the robots.txt file which dictates what files/folders we are able to navigate to"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"dir_traversal"}),(0,n.jsx)(s.td,{children:"Attempt to use a directory traversal attack (i.e. LFI) to look for system files such as /etc/passwd on Linux (http://ip_address/application.php?view=../../../../../../../etc/passwd)"})]})]})]}),"\n",(0,n.jsxs)(s.p,{children:["We can specify the plugin we wish to use by using the ",(0,n.jsx)(s.code,{children:"-Plugin"})," argument and the name of the plugin we wish to use."]}),"\n",(0,n.jsx)(s.h2,{id:"verbosing-our-scan",children:"Verbosing our Scan"}),"\n",(0,n.jsx)(s.p,{children:"We can increase the verbosity of our Nikto scan by providing the following arguments with the -Display flag. Unless specified, the output given by Nikto is not the entire output, as it can sometimes be irrelevant (but that isn't always the case)"}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Argument"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Reasons for Use"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"1"}),(0,n.jsx)(s.td,{children:"Show any redirects that are given by the web server."}),(0,n.jsx)(s.td,{children:"Web servers may want to relocate us to a specific file or directory, so we will need to adjust our scan accordingly for this."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"2"}),(0,n.jsx)(s.td,{children:"Show any cookies received"}),(0,n.jsx)(s.td,{children:"Applications often use cookies as a means of storing data. For example, web servers use sessions, where e-commerce sites may store products in your basket as these cookies. Credentials can also be stored in cookies."})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"E"}),(0,n.jsx)(s.td,{children:"Output any errors"}),(0,n.jsx)(s.td,{children:"This will be useful for debugging if your scan is not returning the results that you expect!"})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"tuning-your-scan-for-vulnerability-searching",children:"Tuning Your Scan for Vulnerability Searching"}),"\n",(0,n.jsxs)(s.p,{children:["Nikto has several categories of vulnerabilities that we can specify our scan to enumerate and test for. The following list is not extensive and only include the ones that you may commonly use. We can use the ",(0,n.jsx)(s.code,{children:"-Tuning"})," flag and provide a value in our Nikto scan"]}),"\n",(0,n.jsxs)(s.table,{children:[(0,n.jsx)(s.thead,{children:(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.th,{children:"Category Name"}),(0,n.jsx)(s.th,{children:"Description"}),(0,n.jsx)(s.th,{children:"Tuning Option"})]})}),(0,n.jsxs)(s.tbody,{children:[(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"File Upload"}),(0,n.jsx)(s.td,{children:"Search for anything on the web server that may permit us to upload a file. This could be used to upload a reverse shell for an application to execute."}),(0,n.jsx)(s.td,{children:"0"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Misconfigurations / Default Files"}),(0,n.jsx)(s.td,{children:"Search for common files that are sensitive (and shouldn't be accessible such as configuration files) on the web server."}),(0,n.jsx)(s.td,{children:"2"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Information Disclosure"}),(0,n.jsx)(s.td,{children:"Gather information about the web server or application (i.e. verison numbers, HTTP headers, or any information that may be useful to leverage in our attack later)"}),(0,n.jsx)(s.td,{children:"3"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Injection"}),(0,n.jsx)(s.td,{children:"Search for possible locations in which we can perform some kind of injection attack such as XSS or HTML"}),(0,n.jsx)(s.td,{children:"4"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"Command Execution"}),(0,n.jsx)(s.td,{children:"Search for anything that permits us to execute OS commands (such as to spawn a shell)"}),(0,n.jsx)(s.td,{children:"8"})]}),(0,n.jsxs)(s.tr,{children:[(0,n.jsx)(s.td,{children:"SQL Injection"}),(0,n.jsx)(s.td,{children:"Look for applications that have URL parameters that are vulnerable to SQL Injection"}),(0,n.jsx)(s.td,{children:"9"})]})]})]}),"\n",(0,n.jsx)(s.h2,{id:"saving-your-findings",children:"Saving Your Findings"}),"\n",(0,n.jsx)(s.p,{children:"Rather than working with the output on the terminal, we can instead, just dump it directly into a file for further analysis - making our lives much easier."}),"\n",(0,n.jsx)(s.p,{children:"Nikto is capable of putting to a few file formats including"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Text File"}),"\n",(0,n.jsx)(s.li,{children:"HTML report"}),"\n"]}),"\n",(0,n.jsxs)(s.p,{children:["We can use the ",(0,n.jsx)(s.code,{children:"-o"})," argument (short for ",(0,n.jsx)(s.code,{children:"-Output"}),") and provide both a filename and compatible extension. We ",(0,n.jsx)(s.em,{children:"can"})," specify the format (",(0,n.jsx)(s.code,{children:"-f"}),") specifically, but Nikto is smart enough to use the extension we provide in the ",(0,n.jsx)(s.code,{children:"-o"})," argument to adjust the output accordingly."]})]})}function c(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var n=t(6540);const i={},r=n.createContext(i);function o(e){const s=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:s},e.children)}}}]);